/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./main/main.ts ***!
  \**********************/
let nav_toggle_button = document.getElementById("toggle-second-nav-button");
function toggleClass(elem, class1, class2) {
    if (elem.classList.contains(class1)) {
        elem.classList.remove(class1);
        elem.classList.add(class2);
    }
    else {
        elem.classList.add(class1);
        elem.classList.remove(class2);
    }
}
function primaryNavLoaded() {
    let secondary_nav = document.getElementById("secondary-nav");
    if (secondary_nav != null) {
        nav_toggle_button.classList.remove("hidden");
    }
    else {
        nav_toggle_button.classList.add("hidden");
    }
}
function secondaryNavLoaded(path) {
    let nav = document.getElementById("secondary-nav");
    let allNavItems = nav.querySelectorAll("a");
    allNavItems.forEach((navItem) => {
        navItem.classList.remove("underline");
    });
    let selectedAnchor = nav.querySelector(`a[href="${path}"]`);
    selectedAnchor.classList.add("underline");
}
function sectionSetup() {
    let path_part = window.location.pathname.split("/");
    console.log(path_part);
    if (path_part.length >= 2) {
        switch (path_part[1]) {
            case "fun-nonsense":
                secondaryNavLoaded(window.location.pathname);
                break;
        }
    }
}
nav_toggle_button.onclick = (event) => {
    let secondaryNav = document.getElementById("secondary-nav");
    let parent = secondaryNav.parentElement;
    toggleClass(secondaryNav, "w-0", "w-60");
    toggleClass(parent, "w-0", "w-60");
    document.getElementById("toggle-second-nav-button").classList.toggle("is-active");
};
document.addEventListener("htmx:afterSettle", (event) => {
    primaryNavLoaded();
});
document.onclick = (event) => {
    let target = event.target;
    if (target.matches("#secondary-nav > a")) {
        secondaryNavLoaded(target.getAttribute("href"));
    }
    else if (target.matches("#primary-nav > a")) {
    }
};
sectionSetup();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUMsS0FBWSxFQUFFLEVBQUU7SUFDM0QsZ0JBQWdCLEVBQUU7QUFDdEIsQ0FBQyxDQUFDO0FBRUYsUUFBUSxDQUFDLE9BQU8sR0FBRyxDQUFDLEtBQVksRUFBRSxFQUFFO0lBQ2hDLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxNQUFxQixDQUFDO0lBQ3pDLElBQUksTUFBTSxDQUFDLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFLENBQUM7UUFDdkMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUUsQ0FBQyxDQUFDO0lBQ3JELENBQUM7U0FDSSxJQUFJLE1BQU0sQ0FBQyxPQUFPLENBQUMsa0JBQWtCLENBQUMsRUFBRSxDQUFDO0lBRTlDLENBQUM7QUFDTCxDQUFDO0FBRUQsWUFBWSxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY3JpcHRzLy4vbWFpbi9tYWluLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBuYXZfdG9nZ2xlX2J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidG9nZ2xlLXNlY29uZC1uYXYtYnV0dG9uXCIpXHJcblxyXG5mdW5jdGlvbiB0b2dnbGVDbGFzcyhlbGVtOiBIVE1MRWxlbWVudCwgY2xhc3MxOiBzdHJpbmcsIGNsYXNzMjogc3RyaW5nKSB7XHJcbiAgICBpZiAoZWxlbS5jbGFzc0xpc3QuY29udGFpbnMoY2xhc3MxKSlcclxuICAgIHtcclxuICAgICAgICBlbGVtLmNsYXNzTGlzdC5yZW1vdmUoY2xhc3MxKTtcclxuICAgICAgICBlbGVtLmNsYXNzTGlzdC5hZGQoY2xhc3MyKTtcclxuICAgIH1cclxuICAgIGVsc2UgXHJcbiAgICB7XHJcbiAgICAgICAgZWxlbS5jbGFzc0xpc3QuYWRkKGNsYXNzMSk7XHJcbiAgICAgICAgZWxlbS5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzMik7XHJcbiAgICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHByaW1hcnlOYXZMb2FkZWQoKSB7XHJcbiAgICBsZXQgc2Vjb25kYXJ5X25hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2Vjb25kYXJ5LW5hdlwiKTtcclxuICAgIGlmIChzZWNvbmRhcnlfbmF2ICE9IG51bGwpIHtcclxuICAgICAgICBuYXZfdG9nZ2xlX2J1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgbmF2X3RvZ2dsZV9idXR0b24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2Vjb25kYXJ5TmF2TG9hZGVkKHBhdGg6c3RyaW5nKSB7XHJcbiAgICBsZXQgbmF2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWNvbmRhcnktbmF2XCIpO1xyXG4gICAgbGV0IGFsbE5hdkl0ZW1zID0gbmF2IS5xdWVyeVNlbGVjdG9yQWxsKFwiYVwiKTtcclxuICAgIGFsbE5hdkl0ZW1zLmZvckVhY2goKG5hdkl0ZW0pID0+IHtcclxuICAgICAgICBuYXZJdGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJ1bmRlcmxpbmVcIik7XHJcbiAgICB9KVxyXG5cclxuICAgIGxldCBzZWxlY3RlZEFuY2hvciA9IG5hdiEucXVlcnlTZWxlY3RvcihgYVtocmVmPVwiJHtwYXRofVwiXWApIGFzIEhUTUxFbGVtZW50O1xyXG4gICAgc2VsZWN0ZWRBbmNob3IuY2xhc3NMaXN0LmFkZChcInVuZGVybGluZVwiKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2VjdGlvblNldHVwKCkge1xyXG4gICAgbGV0IHBhdGhfcGFydCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5zcGxpdChcIi9cIik7XHJcbiAgICBjb25zb2xlLmxvZyhwYXRoX3BhcnQpO1xyXG4gICAgaWYocGF0aF9wYXJ0Lmxlbmd0aCA+PSAyKSB7XHJcbiAgICAgICAgc3dpdGNoKHBhdGhfcGFydFsxXSkge1xyXG4gICAgICAgICAgICBjYXNlIFwiZnVuLW5vbnNlbnNlXCI6IFxyXG4gICAgICAgICAgICAgICAgc2Vjb25kYXJ5TmF2TG9hZGVkKHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZSk7IFxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG5cclxubmF2X3RvZ2dsZV9idXR0b24ub25jbGljayA9IChldmVudDogRXZlbnQpID0+IHtcclxuICAgIGxldCBzZWNvbmRhcnlOYXYgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlY29uZGFyeS1uYXZcIikgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICBsZXQgcGFyZW50ID0gc2Vjb25kYXJ5TmF2LnBhcmVudEVsZW1lbnQgYXMgSFRNTEVsZW1lbnQ7XHJcbiAgICB0b2dnbGVDbGFzcyhzZWNvbmRhcnlOYXYsIFwidy0wXCIsIFwidy02MFwiKTtcclxuICAgIHRvZ2dsZUNsYXNzKHBhcmVudCwgXCJ3LTBcIiwgXCJ3LTYwXCIpO1xyXG4gICAgXHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRvZ2dsZS1zZWNvbmQtbmF2LWJ1dHRvblwiKS5jbGFzc0xpc3QudG9nZ2xlKFwiaXMtYWN0aXZlXCIpO1xyXG59XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiaHRteDphZnRlclNldHRsZVwiLCAoZXZlbnQ6IEV2ZW50KSA9PiB7XHJcbiAgICBwcmltYXJ5TmF2TG9hZGVkKClcclxufSlcclxuXHJcbmRvY3VtZW50Lm9uY2xpY2sgPSAoZXZlbnQ6IEV2ZW50KSA9PiB7XHJcbiAgICBsZXQgdGFyZ2V0ID0gZXZlbnQudGFyZ2V0IGFzIEhUTUxFbGVtZW50O1xyXG4gICAgaWYgKHRhcmdldC5tYXRjaGVzKFwiI3NlY29uZGFyeS1uYXYgPiBhXCIpKSB7XHJcbiAgICAgICAgc2Vjb25kYXJ5TmF2TG9hZGVkKHRhcmdldC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpISk7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICh0YXJnZXQubWF0Y2hlcyhcIiNwcmltYXJ5LW5hdiA+IGFcIikpIHtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbnNlY3Rpb25TZXR1cCgpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=